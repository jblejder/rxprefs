// Based on http://makingiants.github.io/blog/gitlabci-toolbox-for-android/
apply plugin: 'jacoco'

task testDebugUnitTestCoverage(type: JacocoReport, dependsOn: [':rxprefs:testDebugUnitTest', 'testDebugUnitTest']) {
    group = 'Reporting'
    description = "Generate Jacoco coverage reports for the debug build."

    def debugTree = fileTree(
            dir: "${project.buildDir}/intermediates/classes/debug",
            excludes: [
                    '**/dagger/**',
                    '**/*_Factory*',
                    '**/databinding/*',
                    '**/BR.class',
                    '**/R.class',
                    '**/R$*.class',
                    '**/*$ViewInjector*.*',
                    '**/*$ViewBinder*.*',
                    '**/BuildConfig.*',
                    '**/Manifest*.*',
                    '**/*$Lambda$*.*', // Jacoco can not handle several "$" in class name.
                    '**/*$inlined$*.*', // Kotlin specific, Jacoco can not handle several "$" in class name.
                    '**/*Module.*', // Modules for Dagger.
                    '**/*Dagger*.*', // Dagger auto-generated code.
                    '**/*MembersInjector*.*', // Dagger auto-generated code.
                    '**/*_Provide*Factory*.*'] // Dagger auto-generated code.
    )
    def kotlindebugTree = fileTree(
            dir: "${project.buildDir}/tmp/kotlin-classes/debug",
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/*$ViewBinder*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*',
                       '**/*$Lambda$*.*', // Jacoco can not handle several "$" in class name.
                       '**/*$inlined$*.*', // Kotlin specific, Jacoco can not handle several "$" in class name.
                       '**/*Module.*', // Modules for Dagger.
                       '**/*Dagger*.*', // Dagger auto-generated code.
                       '**/*MembersInjector*.*', // Dagger auto-generated code.
                       '**/*_Provide*Factory*.*'] // Dagger auto-generated code.
    )

    classDirectories = files([debugTree],[kotlindebugTree])


    def coverageSourceDirs = ['src/main/java']

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files("${project.buildDir}/jacoco/testDebugUnitTest.exec")

    reports {
        xml.enabled = true
        html.enabled = true
    }
}
